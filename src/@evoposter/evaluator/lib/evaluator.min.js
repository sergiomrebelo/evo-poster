const t=(t,e,r,l,n)=>l+(t-e)/(r-e)*(n-l),e=(t,e,r)=>Math.min(r,Math.max(e,t)),r=t=>t.reduce(((t,e)=>t+e),0)/t.length||0,l=t=>t.reduce(((t,e)=>t+e),0),n=t=>Math.max(...t),a=t=>Math.min(...t),o=t=>t.filter(((t,e,r)=>r.indexOf(t)===e)),s=t=>{if(t.levels)return{r:parseInt(t.levels[0]),g:parseInt(t.levels[1]),b:parseInt(t.levels[2])};let e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null},i=(t,e)=>Math.sqrt(Math.pow(t.r-e.r,2)+Math.pow(t.g-e.g,2)+Math.pow(t.b-e.b,2)),f=10,h=[.8,.2],u={MAX_CONSTRAINT:1,WHITE_SPACE_FACTOR:3,MODES:["OVERSET","JUSTIFY","ATTEMPT_JUSTIFY"],DEFAULT_MAX_LIMIT_SCALE:1},p={MIN_RANGE:50,THRESHOLD_VALID:.2,MODES:["DIF","MIN"]},c={MODES:["BOTH","TYPE_FAMILY","CATEGORY"]},g=.5,d=10;const M=u.MAX_CONSTRAINT,E=u.WHITE_SPACE_FACTOR,T=u.DEFAULT_MAX_LIMIT_SCALE,I=u.MODES,b=(e,r)=>t(e=(e=e>=0?0:e)<=-r?-r:e,-r,0,M,0),A=(e,r)=>(e=Math.abs(e),t(e=e>r?r:e,r,0,M,0)),y=(t,e)=>A(t=t>=0?t/E:t,e),O={MODES:["RELATIVE","FIXED"]}.MODES;let m=p.MIN_RANGE,_=p.THRESHOLD_VALID,x=p.MODES;const S=(e,r)=>{const l=r.filter(((t,e,r)=>r.indexOf(t)===e)),n=[];for(let t of l)for(let l=0;l<r.length;l++)if(r[l]===t){n.push(e[l]);break}const a=n.filter(((t,e)=>n.indexOf(t)!==e));let o=1;if(!a.length>=1){let a=0;for(let t in r){let o=r[t],s=e[t],i=l.indexOf(o);s!==n[i]&&a++}o=t(a,0,e.length,0,1)}return o},D=(l,o,s="DIF")=>{x.includes(s)||(s="DIF");const i=n(l),f=a(l);let h=Math.abs(i-f);if(h<m)return 1;const u=n(o),p=a(o);let c=f;if("DIF"===s)for(let t in o)if(o[t]===p){c=l[t];break}const g=o.map((r=>{let l=t(r,p,u,0,h);return l=e(l,0,h),l})),d=[];for(let t in l){let e=l[t],r=Math.abs(e-c),n=Math.abs(r-g[t]);d.push(n)}let M=t(r(d),0,h,1,0);return e(M,0,1)};var F={anger:{color:{typography:["#ff0000","#00ff00"],background:["#ff0000"]},typefaces:["sans-serif","neo-grotesque"]},joy:{color:{typography:[],background:["#ffff00","#00ff00"]},typefaces:["sans-serif","serif"]},trust:{color:{typography:[],background:["#0000ff","#00ff00"]},typefaces:["neo-grotesque"]},sadness:{color:{typography:[],background:["#0071b6"]},typefaces:[]},disgust:{color:{typography:["#800080"],background:[]},typefaces:[]}},L=Object.freeze({__proto__:null,default:F});const R=441.67,w=f,v=h,Y=g,C=d,N=(t,e,r=1)=>{let l=0,n=t.width*r*t.height*r;t.loadPixels();for(let r=0;r<4*n;r+=4){let n={r:t.pixels[r],g:t.pixels[r+1],b:t.pixels[r+2]};i(n,e)<C&&l++}return l/n},V=c.MODES,k=(t,e,r)=>{const n=[];for(let t in r)n.push(G(e[t],r[t]));let a=0,o=0;const s=l(t);for(let e in t)a+=n[e].x*t[e],o+=n[e].y*t[e];return a/=s,o/=s,{x:a,y:o}},G=(t,e)=>({x:t/2,y:e/2-e/20}),H=async(t,e,r,l)=>{let n=[],a=[];for(let o in r){n.push(r[o]*l[o]);const s=await t.get(0,t.height/2+e.center[o],t.width,e.l[o]);await s.loadPixels();let i=0,f=0,h=0;const u=s.pixels.length/4;for(let t=0;t<s.pixels.length;t+=4)i+=s.pixels[t],f+=s.pixels[t+1],h+=s.pixels[t+2];i=Math.round(i/u),f=Math.round(f/u),h=Math.round(h/u);const p=(.2126*i+.7152*f+.0722*h)/255;a.push(-Math.log10(p))}return n.map(((t,e)=>t*a[e]))},P=(t=[],e,l="OVERSET",n=T)=>{I.includes(l)||(l="OVERSET");let a=[],o=e*n;for(let r of t){let t=e-r,n=M;switch(l){case"JUSTIFY":n=A(t,o);break;case"ATTEMPT_JUSTIFY":n=y(t,o);break;default:n=b(t,o)}a.push(n)}return r([...a])},$=(t,e,r=[],l=[],n={left:0,top:0,right:0,bottom:0})=>{let a=!1,o="",s=Math.abs(n.top)+Math.abs(n.bottom);for(let t of r)s+=parseFloat(t);let i=Math.abs(n.left)+Math.abs(n.right);for(let t of l)i+=parseFloat(t);return i=Math.round(i),s=Math.round(s),s>e?(a=!0,o+=`Grid height is bigger than container (grid:${s}, container:${e}). `):s<e&&(o+=`Grid and container height are not the same (grid:${s}, container:${e}). `),i>t?(a=!0,o+=`Grid width is bigger than container (grid:${i}, container:${t}). `):i<t&&(o+=`Grid and container width are not the same (grid:${i}, container:${t}). `),a?1:0},U=(t=[],e=null,n="RELATIVE",a={height:100,margin:[0,0,0,0]})=>{O.includes(n)||(n="RELATIVE");let o=0;"RELATIVE"===n?o=l(t):"FIXED"===n&&(o=a.height-(a.height*a.margin[1]+a.height*a.margin[3]));const s=t.map((t=>t/o));let i=[];for(let t in e){const r=Math.abs(e[t][3]-s[t]);i.push(r)}return 1-r(i)},X=(t,e,r=1,a=!0,o=[.4,.3,.3])=>{const s=e.map((t=>t[3]));let i,f=[D(t.map((t=>t.weight)),s),D(t.map((t=>t["font-stretch"])),s),r>1?S(t.map((t=>t["font-stretch"])),s):0],h=f.map(((t,e)=>t*o[e]));if(a)i=l(h);else{let t=f.map((t=>t>_)),e=0;for(let r of t)r&&e++;i=n(f)/e}return i},J=async(t,l,n,a,o=L)=>{let f=t.predominant.emotion;if(void 0===o.default[f])return 1;const h=o.default[f].color.typography,u=o.default[f].color.background,p=o.default[f].typefaces;let c=1;if(void 0!==h&&h.length>0){let t=[];for(let e of l){let r=s(e.color),l=Number.MAX_VALUE;for(let t of h){t=s(t);let e=i(r,t);e<l&&(l=e)}t.push(l)}c=t.length<1?1:r(t),c/=R,c=e(1-c,0,1)}let g=1;if(void 0!==u&&0!==u.length){let t=[];g=0;for(let e of n){e=s(e);let r=Number.MAX_VALUE;for(let t of u){t=s(t);let l=i(e,t);l<r&&(r=l)}t.push(r)}g=g.length<1?1:r(t),g/=R,g=e(1-g,0,1)}let d=1;if(void 0!==p&&p.length>0){let t=[];for(let e of l){let r=0;const l=a.map((t=>t.family)).indexOf(e.typeface),n=a[l].tags;for(let t of p)n.includes(t)&&(r+=1/p.length);t.push(r)}d=t.length<1?1:r(t),d=e(d,0,1)}return(c+g+d)/3},q=(t,e,l=v)=>{if(t.length<2)return 1;let n=t,a=[];for(let t=0;t<n.length-1;t++){let e=Math.abs(n[t]-n[t+1]),r=w/(w+e);a.push(r)}let s=((t,e)=>t.reduce(((t,r,l)=>t+r*e[l]),0))([r(a),1/o(e).length],l);return s},B=t=>{if(t.length<2)return 1;const e=t;let l=[];for(let t=0;t<e.length-1;t++){let r=10/(10+Math.abs(e[t]-e[t+1]));l.push(r)}return r(l)},j=(t,e,r=null,l=Y)=>{null===r&&(e=s(e),r=N(t,e,t.pixelDensity()));return 1-4*Math.pow(r-l,2)},W=(t,e,r="BOTH")=>{V.includes(r)||(r="BOTH");let l=[.5,.5];"TYPE_FAMILY"===r?l=[1,0]:"CATEGORY"===r&&(l=[0,1]);let n=[],a=o(t),s=0,i=0;if("TYPE_FAMILY"!==r){const t=e.map((t=>t.family)),r=e.map((t=>t.category));for(let e of a){const l=t.indexOf(e);-1===l?n.push("undefined"):n.push(r[l])}n=o(n),s=1/n.length}"CATEGORY"!==r&&(i=1/a.length);return[i,s].reduce(((t,e,r)=>t+e*l[r]),0)},z=async(t=null,e,r,l,n,a=null)=>{const o=e.width,s=e.height,i=null===a?await H(t,r,l,n):a,f=k(i,l,n),h=G(o,s);let u=Math.pow((f.x-h.x)/o,2)+Math.pow((f.y-h.y)/s,2);return u=1-Math.pow(Math.abs(u/2),.5),u};var K=()=>{console.log("@evo-poster Â· evaluator v2.00")};export{q as alignment,K as default,$ as gridAppropriateSize,P as legibility,B as regularity,X as semanticsEmphasis,U as semanticsLayout,J as semanticsVisuals,W as typefaceParing,z as visualBalance,j as whiteSpaceFraction};
//# sourceMappingURL=evaluator.min.js.map
